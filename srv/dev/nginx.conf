#user  nobody;
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        set $yii_bootstrap "index.php";
        charset utf-8;
        client_max_body_size 128M;

        listen 80 default backlog=2048;
        # listen         443 ssl;
        server_name    localhost;
        root /vagrant/src/frontend/web;
        index       $yii_bootstrap;

        location / {
            # Redirect everything that isn't real file to yii bootstrap file including arguments.
            try_files $uri $uri/ /$yii_bootstrap?$args;
        }    
        
         # uncomment to avoid processing of calls to non-existing static files by Yii
        location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar|ttf|woff|otf)$ {
            try_files $uri =404;
        }
        error_page 404 /404.html;
        location ~ \.php$ {
        if ($args ~* "r=(.+)&id=(\d+)") {
                set $args '';
                return 301 /$1/$2;
            }
            include fastcgi.conf;
            fastcgi_pass   127.0.0.1:9000;
            #fastcgi_index  index.php;
            #fastcgi_param  SCRIPT_FILENAME  /vagrant/src/mobile/web$fastcgi_script_name;
            #include        fastcgi_params;
        }
    
        location ~ /\.(ht|svn|git) {
            deny all;
        }   
        #ssl on;
        #ssl_certificate /vagrant/https_pems/server.crt;
        #ssl_certificate_key /vagrant/https_pems/server.key;
        #ssl_verify_client off;
    }

    
    server {
        listen 8888;
        server_name localhost;
        location ~* ^.+\.(ico|apk|mp4|json|mp3|gif|jpg|jpeg|png|html|htm|exe)$ {
            root         /vagrant/static/;
            access_log   off;
            expires      30d;
        }
    }

}
